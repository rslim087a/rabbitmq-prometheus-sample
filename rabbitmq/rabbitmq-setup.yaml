---
apiVersion: v1
kind: Secret
metadata:
  name: rabbitmq-secret
  namespace: database-monitoring
type: Opaque
data:
  RABBITMQ_DEFAULT_USER: cmFiYml0bXF1c2Vy  # base64 encoded 'rabbitmquser'
  RABBITMQ_DEFAULT_PASS: cmFiYml0bXFwYXNz  # base64 encoded 'rabbitmqpass'

---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  namespace: database-monitoring
  labels:
    app: rabbitmq
spec:
  ports:
    - port: 5672
      name: amqp
    - port: 15672
      name: http
  selector:
    app: rabbitmq

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq
  namespace: database-monitoring
spec:
  serviceName: "rabbitmq"
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:3.9-management
        ports:
        - containerPort: 5672
          name: amqp
        - containerPort: 15672
          name: http
        env:
        - name: RABBITMQ_DEFAULT_USER
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secret
              key: RABBITMQ_DEFAULT_USER
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secret
              key: RABBITMQ_DEFAULT_PASS
        volumeMounts:
        - name: rabbitmq-storage
          mountPath: /var/lib/rabbitmq
  volumeClaimTemplates:
  - metadata:
      name: rabbitmq-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 1Gi